// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String          @id @default(uuid())
  firstName           String          @map("first_name")
  lastName            String?         @map("last_name")
  email               String          @unique
  password            String?
  photoUrl            String?         @map("photo_url")
  isVerified          Boolean         @default(false) @map("is_verified")
  isTermsAccepted     Boolean         @default(false) @map("is_terms_accepted")
  onBoardingCompleted Boolean         @default(false) @map("on_boarding_completed")
  googleId            String?         @map("google_id")
  linkedinId          String?         @map("linkedin_id")
  facebookId          String?         @map("facebook_id")
  birthDate           DateTime?       @map("birth_date")
  country             String?
  state               String?
  city                String?
  skills              String[]
  linkedin            String?
  github              String?
  website             String?
  description         String?
  jobTitle            String?         @map("job_title")
  jobCompany          String?         @map("job_company")
  bigraphy            String?
  isMentor            Boolean         @default(false) @map("is_mentor")
  status              String          @default("PENDING")
  active              Boolean         @default(true)
  availability        Json?
  events              EventsOnUsers[]
  temporaryCodes      TemporaryCode[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Event     Event?   @relation(fields: [eventId], references: [id])
  eventId   String?

  @@map("users")
}

model TemporaryCode {
  id            String    @id @default(uuid())
  temporarycode String    @map("temporary_code")
  email         String
  user          User      @relation(fields: [userId], references: [id])
  userId        String    @map("user_id")
  isPin         Boolean?  @default(false) @map("is_pin")
  expiresAt     DateTime? @default(now()) @map("expires_at")

  @@map("temporary_codes")
}

model Event {
  id          String          @id @default(uuid())
  mentorId    String          @map("mentor_id")
  learners    EventsOnUsers[]
  startDate   String          @map("start_date")
  meetingLink String          @map("meeting_link")
  endDate     String          @map("end_date")
  active      Boolean         @default(false)
  status      String          @default("PENDING")
  createdAt   DateTime        @default(now()) @map("created_at")
  updatedAt   DateTime        @updatedAt @map("updated_at")
  User        User[]

  @@map("events")
}

model EventsOnUsers {
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([eventId, userId])
}

model Skill {
  id   String @id @default(uuid())
  name String

  @@map("skills")
}

model Notification {
  id      String @id @default(uuid())
  message String

  @@map("notifications")
}
